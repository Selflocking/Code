{
    // Place your Code 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "cpp 代码": {
        "scope": "cpp",
        "prefix": "#cpp",
        "body": [
            "#include <bits/stdc++.h>",
            "",
            "using namespace std;",
            "",
            "constexpr int mxN = 1e5 + 5;",
            "",
            "int main() {",
            "    ios::sync_with_stdio(false);",
            "    cin.tie(nullptr);",
            "",
            "    $0",
            "",
            "    return 0;",
            "}",
            ""
        ],
        "description": "cpp 代码"
    },
    "多输入输出": {
        "scope": "cpp",
        "prefix": "#multi",
        "body": [
            "#include <bits/stdc++.h>",
            "",
            "using namespace std;",
            "",
            "constexpr int mxN = 1e5 + 5;",
            "",
            "void solve() {",
            "    $0",
            "}",
            "",
            "int main() {",
            "    ios::sync_with_stdio(false);",
            "    cin.tie(nullptr);",
            "",
            "    int T;",
            "    cin >> T;",
            "    while (T--) {",
            "        solve();",
            "    }",
            "",
            "    return 0;",
            "}",
            "",
        ],
        "description": "多输入输出"
    }
}